{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Install PowerShell Requirements",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Install-Requirements.ps1",
                "-IncludeOptional"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Validate Policy Definitions",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Validate-PolicyDefinitions.ps1",
                "-PolicyPath",
                "${workspaceFolder}/policies"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Deploy Policy Definitions (What-If)",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Deploy-PolicyDefinitions.ps1",
                "-PolicyPath",
                "${workspaceFolder}/policies",
                "-WhatIf"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Deploy Policy Definitions",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Deploy-PolicyDefinitions.ps1",
                "-PolicyPath",
                "${workspaceFolder}/policies"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Test Policy Compliance",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Test-PolicyCompliance.ps1",
                "-OutputFormat",
                "Table"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Run PSScriptAnalyzer",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Invoke-ScriptAnalyzer -Path '${workspaceFolder}' -Settings '${workspaceFolder}/.vscode/PSScriptAnalyzerSettings.psd1' -Recurse"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Initialize Azure Policy Project",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-Command",
                ". '${workspaceFolder}/PowerShell/Microsoft.PowerShell_profile.ps1'; Initialize-AzurePolicyProject"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Format PowerShell Files",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Get-ChildItem -Path '${workspaceFolder}' -Filter '*.ps1' -Recurse | ForEach-Object { Invoke-Formatter -ScriptDefinition (Get-Content $_.FullName -Raw) | Set-Content $_.FullName -Encoding UTF8 }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Generate Policy Reports",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Generate-PolicyReports.ps1",
                "-ResourceGroup",
                "rg-azure-policy-testing",
                "-Format",
                "All"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Run Policy Tests",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Invoke-PolicyTests.ps1",
                "-TestPath",
                "${workspaceFolder}/tests",
                "-ResourceGroup",
                "rg-azure-policy-testing"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Run Storage Policy Tests",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Invoke-PolicyTests.ps1",
                "-TestPath",
                "${workspaceFolder}/tests/storage",
                "-ResourceGroup",
                "rg-azure-policy-testing",
                "-OutputFormat",
                "NUnitXml",
                "-OutputPath",
                "${workspaceFolder}/reports/StoragePolicyTests.xml"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Setup Pre-commit Hooks",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Setup-PreCommit.ps1"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Run Pre-commit Hooks",
            "type": "shell",
            "command": "pre-commit",
            "args": [
                "run",
                "--all-files"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Update Pre-commit Hooks",
            "type": "shell",
            "command": "pre-commit",
            "args": [
                "autoupdate"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Run Policy Tests with Coverage",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Invoke-PolicyTests-WithCoverage.ps1",
                "-TestPath",
                "${workspaceFolder}/tests",
                "-ResourceGroup",
                "rg-azure-policy-testing",
                "-CodeCoverage", // pragma: allowlist secret
                "$true",
                "-CoverageTarget", // pragma: allowlist secret
                "80"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Run Fast Tests with Coverage",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Invoke-PolicyTests-WithCoverage.ps1",
                "-TestPath",
                "tests/storage/Storage.Quick-PolicyValidation.Tests.ps1,tests/storage/Storage.Quick-SoftDeletePolicyValidation.Tests.ps1,tests/network",
                "-CodeCoverage", // pragma: allowlist secret
                "$true",
                "-CoverageTarget", // pragma: allowlist secret
                "75"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Generate Coverage HTML Report",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}/scripts/Invoke-PolicyTests-WithCoverage.ps1",
                "-TestPath",
                "${workspaceFolder}/tests",
                "-ResourceGroup",
                "rg-azure-policy-testing",
                "-CodeCoverage", // pragma: allowlist secret
                "$true",
                "-GenerateHtmlReport", // pragma: allowlist secret
                "-CoverageTarget", // pragma: allowlist secret
                "80"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        }
    ]
}
