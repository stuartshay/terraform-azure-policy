{
    "powershell.powerShellDefaultVersion": "pwsh",
    "powershell.promptToUpdatePowerShell": false,
    "powershell.integratedConsole.showOnStartup": false,
    "powershell.debugging.createTemporaryIntegratedConsole": false,
    "powershell.scriptAnalysis.enable": true,
    "powershell.scriptAnalysis.settingsPath": ".vscode/PSScriptAnalyzerSettings.psd1",
    "powershell.codeFormatting.autoCorrectAliases": true,
    "powershell.codeFormatting.avoidSemicolonsAsLineTerminators": true,
    "powershell.codeFormatting.pipelineIndentationStyle": "IncreaseIndentationForFirstPipeline",
    "powershell.codeFormatting.trimWhitespaceAroundPipe": true,
    "powershell.codeFormatting.useConstantStrings": true,
    "powershell.codeFormatting.useCorrectCasing": true,
    "powershell.codeFormatting.whitespaceBetweenParameters": true,
    "powershell.codeFormatting.ignoreOneLineBlock": true,
    "powershell.codeFormatting.alignPropertyValuePairs": true,
    "powershell.codeFormatting.newLineAfterOpenBrace": true,
    "powershell.codeFormatting.newLineAfterCloseBrace": true,
    "files.associations": {
        "*.ps1": "powershell",
        "*.psm1": "powershell",
        "*.psd1": "powershell",
        "*.tfvars": "terraform",
        "*.tfbackend": "terraform"
    },
    "files.defaultLanguage": "powershell",
    "terminal.integrated.profiles.linux": {
        "pwsh": {
            "source": "PowerShell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "-Command",
                "if (Test-Path './PowerShell/Microsoft.PowerShell_profile.ps1') { . './PowerShell/Microsoft.PowerShell_profile.ps1' }"
            ]
        }
    },
    "terminal.integrated.defaultProfile.linux": "pwsh",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.insertSpaces": true,
    "editor.tabSize": 4,
    "editor.rulers": [
        120
    ],
    "[powershell]": {
        "editor.semanticHighlighting.enabled": true,
        "editor.defaultFormatter": "ms-vscode.powershell",
        "editor.formatOnSave": true,
        "editor.insertSpaces": true,
        "editor.tabSize": 4,
        "files.encoding": "utf8",
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "editor.wordWrap": "on",
        "editor.wordWrapColumn": 120
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.formatOnSave": true,
        "editor.insertSpaces": true,
        "editor.tabSize": 3
    },
    "[terraform]": {
        "editor.defaultFormatter": "hashicorp.terraform",
        "editor.formatOnSave": true,
        "editor.insertSpaces": true,
        "editor.tabSize": 2
    },
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/.terraform": true,
        "**/terraform.tfstate*": true,
        "**/.terraform.lock.hcl": true
    },
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/**": true,
        "**/.terraform/**": true
    },
    "powershell.developer.enableDebugLogging": false,
    "powershell.developer.editorServicesLogLevel": "Warning",
    "tasks.version": "2.0.0",
    "extensions.recommendations": [
        "ms-vscode.powershell",
        "hashicorp.terraform",
        "ms-vscode.azure-account",
        "ms-azuretools.vscode-azureresourcegroups",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-json"
    ],
    // Pester Test Extension Configuration
    "pester.useLegacyCodeLens": false,
    "pester.outputVerbosity": "Detailed",
    "pester.debugOutputVerbosity": "Detailed",
    "pester.enableCodeLens": true,
    "pester.autoRefreshTests": true,
    "pester.respectGitIgnore": true,
    "pester.testFilePath": [
        "**/*.Tests.ps1",
        "**/tests/**/*.ps1"
    ],
    "pester.excludePath": [
        "**/node_modules/**",
        "**/.terraform/**",
        "**/reports/**",
        "**/config/**"
    ],
    "pester.testArgs": [
        "-CI"
    ],
    // Test Panel Configuration
    "testExplorer.useNativeTesting": true,
    "testing.automaticallyOpenPeekView": "failureInVisibleDocument",
    "testing.openTesting": "neverOpen",
    "testing.followRunningTest": true,
    "testing.defaultGutterClickAction": "run",
    "testing.automaticallyOpenTestResults": "neverOpen"
}
