{
    "policies": {
        "storage": {
            "deny-storage-account-public-access": {
                "name": "deny-storage-account-public-access",
                "displayName": "Deny Storage Account Public Access",
                "category": "Storage",
                "policyPath": "policies/storage/deny-storage-account-public-access/rule.json",
                "resourcePrefix": "testpolicysa",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "storageAccountSku": "Standard_LRS"
                }
            },
            "deny-storage-version": {
                "name": "deny-storage-version",
                "displayName": "Deny Storage Account Blob Versioning Disabled",
                "category": "Storage",
                "policyPath": "policies/storage/deny-storage-version/rule.json",
                "resourcePrefix": "testpolicyver",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "storageAccountSku": "Standard_LRS"
                }
            },
            "deny-storage-https-disabled": {
                "name": "deny-storage-https-disabled",
                "displayName": "Deny Storage Account HTTPS Disabled",
                "category": "Storage",
                "policyPath": "policies/storage/deny-storage-https-disabled/rule.json",
                "resourcePrefix": "testpolicyhttps",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "storageAccountSku": "Standard_LRS"
                }
            },
            "deny-storage-blob-logging-disabled": {
                "name": "deny-storage-blob-logging-disabled",
                "displayName": "Deny Storage Account Blob Logging Disabled",
                "category": "Storage",
                "policyPath": "policies/storage/deny-storage-blob-logging-disabled/rule.json",
                "resourcePrefix": "testpolicylog",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "storageAccountSku": "Standard_LRS"
                }
            },
            "deny-storage-softdelete": {
                "name": "deny-storage-softdelete",
                "displayName": "Deny Storage Account Soft Delete Disabled",
                "category": "Storage",
                "policyPath": "policies/storage/deny-storage-softdelete/rule.json",
                "resourcePrefix": "testpolicysoft",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "storageAccountSku": "Standard_LRS",
                    "minimumRetentionDays": 7
                }
            },
            "deny-storage-sas-expiration": {
                "name": "deny-storage-sas-expiration",
                "displayName": "Deny Storage Account SAS Token Expiration Greater Than Maximum",
                "category": "Storage",
                "policyPath": "policies/storage/deny-storage-sas-expiration/rule.json",
                "resourcePrefix": "testpolicysas",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "storageAccountSku": "Standard_LRS",
                    "maxSasExpirationDays": 90
                }
            }
        },
        "function-app": {
            "deny-function-app-anonymous": {
                "name": "deny-function-app-anonymous",
                "displayName": "Audit Function App Anonymous Access",
                "category": "Function App",
                "policyPath": "policies/function-app/deny-function-app-anonymous/rule.json",
                "resourcePrefix": "testpolicyfn",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "runtime": "PowerShell"
                }
            },
            "deny-function-app-https-only": {
                "name": "deny-function-app-https-only",
                "displayName": "Deny Function App HTTPS Only Disabled",
                "category": "Function App",
                "policyPath": "policies/function-app/deny-function-app-https-only/rule.json",
                "resourcePrefix": "testpolicyfnhttps",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "runtime": "PowerShell"
                }
            },
            "deny-function-app-http-version": {
                "name": "deny-function-app-http-version",
                "displayName": "Deny Function App HTTP Version",
                "category": "Function App",
                "policyPath": "policies/function-app/deny-function-app-http-version/rule.json",
                "resourcePrefix": "testpolicyfnhttp",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "runtime": "PowerShell"
                }
            },
            "deny-function-app-aad-only": {
                "name": "deny-function-app-aad-only",
                "displayName": "Functions | DENY: Azure AD-only auth, no basic publishing creds, FTP/FTPS disabled",
                "category": "Function App",
                "policyPath": "policies/function-app/deny-function-app-aad-only/rule.json",
                "resourcePrefix": "testpolicyfnaad",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "runtime": "PowerShell"
                }
            },
            "deny-function-app-no-private-endpoint": {
                "name": "deny-function-app-no-private-endpoint",
                "displayName": "Function Apps Must Disable Public Network Access",
                "category": "Function App",
                "policyPath": "policies/function-app/deny-function-app-no-private-endpoint/rule.json",
                "resourcePrefix": "testpolicyfnpe",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "runtime": "PowerShell"
                }
            }
        },
        "network": {
            "deny-network-no-nsg": {
                "name": "deny-network-no-nsg",
                "displayName": "Deny Network Resources Without NSG",
                "category": "Network",
                "policyPath": "policies/network/deny-network-no-nsg/rule.json",
                "resourcePrefix": "testpolicynet",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "exemptedSubnets": [
                        "GatewaySubnet",
                        "AzureFirewallSubnet",
                        "AzureFirewallManagementSubnet",
                        "RouteServerSubnet",
                        "AzureBastionSubnet"
                    ]
                }
            },
            "deny-network-private-ips": {
                "name": "deny-network-private-ips",
                "displayName": "Deny Network Private IPs",
                "category": "Network",
                "policyPath": "policies/network/deny-network-private-ips/rule.json",
                "resourcePrefix": "testpolicyip",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp"
                }
            },
            "deny-vnet-external-dns": {
                "name": "deny-vnet-external-dns",
                "displayName": "Deny VNet External DNS",
                "category": "Network",
                "policyPath": "policies/network/deny-vnet-external-dns/rule.json",
                "resourcePrefix": "testpolicydns",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp"
                }
            }
        },
        "app-service": {
            "deny-app-service-plan-not-zone-redundant": {
                "name": "deny-app-service-plan-not-zone-redundant",
                "displayName": "Deny App Service Plan Not Zone Redundant",
                "category": "App Service",
                "policyPath": "policies/app-service/deny-app-service-plan-not-zone-redundant/rule.json",
                "resourcePrefix": "testpolicyapp",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp",
                    "skuName": "P1v3",
                    "zoneRedundant": true
                }
            }
        },
        "governance": {
            "require-tag-environment": {
                "name": "require-tag-environment",
                "displayName": "Require Environment Tag on Resources",
                "category": "Governance",
                "policyPath": "policies/governance/require-tag-environment/rule.json",
                "resourcePrefix": "testpolicytag",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp"
                }
            },
            "require-tag-costcenter": {
                "name": "require-tag-costcenter",
                "displayName": "Require CostCenter Tag on Resources",
                "category": "Governance",
                "policyPath": "policies/governance/require-tag-costcenter/rule.json",
                "resourcePrefix": "testpolicycc",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp"
                }
            },
            "enforce-naming-convention-storage": {
                "name": "enforce-naming-convention-storage",
                "displayName": "Enforce Naming Convention for Storage Accounts",
                "category": "Governance",
                "policyPath": "policies/governance/enforce-naming-convention-storage/rule.json",
                "resourcePrefix": "testpolicyname",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp"
                }
            },
            "enforce-naming-convention-func-app": {
                "name": "enforce-naming-convention-func-app",
                "displayName": "Enforce Naming Convention for Function Apps",
                "category": "Governance",
                "policyPath": "policies/governance/enforce-naming-convention-func-app/rule.json",
                "resourcePrefix": "testpolicyfunc",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp"
                }
            },
            "inherit-tag-from-resource-group": {
                "name": "inherit-tag-from-resource-group",
                "displayName": "Inherit Tags from Resource Group",
                "category": "Governance",
                "policyPath": "policies/governance/inherit-tag-from-resource-group/rule.json",
                "resourcePrefix": "testpolicyinherit",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp"
                }
            },
            "enforce-allowed-locations": {
                "name": "enforce-allowed-locations",
                "displayName": "Enforce Allowed Locations for Resources",
                "category": "Governance",
                "policyPath": "policies/governance/enforce-allowed-locations/rule.json",
                "resourcePrefix": "testpolicyloc",
                "testConfig": {
                    "compliantSuffix": "comp",
                    "nonCompliantSuffix": "nonc",
                    "exemptedSuffix": "exemp"
                }
            }
        }
    },
    "environments": {
        "dev": {
            "resourceGroupName": "rg-azure-policy-testing-dev",
            "subscriptionId": null,
            "location": "East US"
        },
        "staging": {
            "resourceGroupName": "rg-azure-policy-testing-staging",
            "subscriptionId": null,
            "location": "East US 2"
        },
        "prod": {
            "resourceGroupName": "rg-azure-policy-testing",
            "subscriptionId": null,
            "location": "East US"
        }
    },
    "metadata": {
        "version": "1.0.0",
        "lastUpdated": "2025-01-10",
        "description": "Centralized policy configuration for Azure Policy functional tests"
    }
}
